---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:
    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - htop
          - curl
          - wget
          - tree
          - apt-transport-https
          - ca-certificates
          - python3-pip
          - git
          - bash-completion
          - zsh
          - flameshot
          - fonts-hack
          - tmux
          - mysql-client-core-8.0

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0
      - name: Changing Default Shell to ZSH
        become: yes
        user:
          name: '{{ ansible_user_id }}'
          shell: /bin/zsh
      - name: Downloading PowerLevel10k
        ignore_errors: true
        shell:
          cmd: 'git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k'
      - name: Changing Default ZSH Theme to PowerLevel10k
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
          state: directory
          mode: 0755
      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present

    - name: Installing AWS CLI via pip3
      become: true
      pip:
        name: awscli
        executable: pip3

    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present
      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
          state: present
          filename: vscode
      - name: Install Visual Studio Code
        become: true
        apt:
          name: code

    - block:
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
      - name: Install Docker
        become: true
        apt:
          name: docker-ce
      - name: Adding existing user to group Docker
        become: yes
        user:
          name: '{{ ansible_user_id }}'
          groups: docker
          append: yes
      - name: Install Docker-Compose
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/1.26.2/docker-compose-Linux-x86_64'
          dest: '/usr/local/bin/docker-compose'
          mode: 755
      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.0/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'
      - name: Install Docker-Compose Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.26.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'
      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'

    - block:
      - name: Installing Kubectl 1.22.0
        become: true
        get_url:
          url: 'https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl'
          dest: /usr/local/bin/kubectl
          mode: 755
      - name: Downloading Kubectx and Kubens
        become: true
        git:
          repo: 'https://github.com/ahmetb/kubectx'
          dest: /opt/kubectx
      - name: Creating Symlink to kubectx and kubens
        become: true
        file:
          src: '/opt/kubectx/{{ item }}'
          dest: '/usr/local/bin/{{ item }}'
          state: link
        with_items:
          - kubectx
          - kubens

    - block:
      - name: Installing asdf
        ignore_errors: true
        shell:
          cmd: 'git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.10.2'
      - name: Adding asdf to path
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: '. "$HOME/.asdf/asdf.sh"'
      - name: Adding asdf completions
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: '. "$HOME/.asdf/completions/asdf.bash"'

    - block:
      - name: Installing Erlang dependencies
        become: true
        apt:
          name: '{{ item }}'
        loop:
          - libssl-dev
          - automake
          - autoconf
          - libncurses5-dev
      - name: Adding Erlang plugin
        ignore_errors: true
        shell:
          cmd: 'asdf plugin-add erlang'
      - name: Adding Elixir plugin
        ignore_errors: true
        shell:
          cmd: 'asdf plugin-add elixir'
      - name: Installing Erlang through asdf
        shell:
          cmd: 'asdf install erlang 25.2.1'
      - name: Installing Elixir through asdf
        shell:
          cmd: 'asdf install elixir 1.14.3-otp-25'

    - block:
      - name: Install Snap packages
        become: true
        snap:
          name: '{{ item }}'
        loop: 
        - telegram-desktop
        - bitwarden
''
    - block: 
      - name: Downloading Discord
        get_url:
          url: 'https://discord.com/api/download?platform=linux&format=deb'
          dest: /home/{{ ansible_user_id }}/Downloads/discord.deb
      
      - name: Installing Discord
        become: true
        shell:
          cmd: 'dpkg -i /home/{{ ansible_user_id }}/Downloads/discord.deb && apt install -fy'
        
    - block:
      - name: Disable mouse acceleration
        shell:
          cmd: 'gsettings set org.gnome.desktop.peripherals.mouse accel-profile flat'